{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/App.svelte","../../src/omggif.js","../../src/gif-player.js","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'itemscope',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback, value) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        if (value === undefined) {\n            callback(component.$$.ctx[index]);\n        }\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.54.0' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","<script>\n  let imageSrc = null;\n  let isShowtime = false;\n  let itemArray = [];\n  let setBpm = 60;\n  function handleUpload(e) {\n    const [file] = e.target.files;\n    if (file) {\n      imageSrc = URL.createObjectURL(file);\n      console.log(imageSrc);\n    }\n  }\n  function addNewItem() {\n    console.log(\"trigger\");\n    itemArray = [\n      ...itemArray,\n      { top: 0, left: 0, width: 100, height: 100, layer: null },\n    ];\n  }\n  function dragItem(e) {\n    e.stopPropagation();\n    let index = e.target.dataset.index;\n    if (!index) return;\n    const parentSize = {\n      x: e.target.parentElement.clientWidth,\n      y: e.target.parentElement.clientHeight,\n    };\n    const itemDataCached = JSON.parse(JSON.stringify(itemArray[index]));\n    const InitLeft = itemDataCached.left;\n    const InitTop = itemDataCached.top;\n    const InitClienX = e.clientX;\n    const InitClienY = e.clientY;\n    const WidthRatio =\n      Math.floor((itemDataCached.width / parentSize.x) * 1000) / 10;\n    const HeightRatio =\n      Math.floor((itemDataCached.height / parentSize.y) * 1000) / 10;\n    document.onmousemove = (moveEvent) => {\n      const fixX =\n        Math.floor(((moveEvent.clientX - InitClienX) / parentSize.x) * 1000) /\n        10;\n      const fixY =\n        Math.floor(((moveEvent.clientY - InitClienY) / parentSize.y) * 1000) /\n        10;\n      itemArray[index].left = InitLeft + fixX;\n      itemArray[index].top = InitTop + fixY;\n      if (itemArray[index].left + WidthRatio > 100)\n        itemArray[index].left = 100 - WidthRatio;\n      if (itemArray[index].left < 0) itemArray[index].left = 0;\n      if (itemArray[index].top + HeightRatio > 100)\n        itemArray[index].top = 100 - HeightRatio;\n      if (itemArray[index].top < 0) itemArray[index].top = 0;\n    };\n    let clearMoveEvent = () => {\n      document.onmousemove = null;\n      document.removeEventListener(\"mouseup\", clearMoveEvent);\n    };\n    document.addEventListener(\"mouseup\", clearMoveEvent);\n  }\n  function adjustItem(e, type, index) {\n    console.log(type, index);\n    e.stopPropagation();\n    switch (type) {\n      case \"plus\":\n        itemArray[index].width += 20;\n        itemArray[index].height += 20;\n        if (itemArray[index].width > 800) itemArray[index].width = 800;\n        if (itemArray[index].height > 800) itemArray[index].height = 800;\n        break;\n      case \"minus\":\n        itemArray[index].width -= 20;\n        itemArray[index].height -= 20;\n        if (itemArray[index].width < 100) itemArray[index].width = 100;\n        if (itemArray[index].height < 100) itemArray[index].height = 100;\n        break;\n      case \"remove\":\n        console.log(\"trigger\");\n        itemArray.splice(index, 1);\n        itemArray = [...itemArray];\n        break;\n      default:\n        break;\n    }\n  }\n  function startTheShow() {\n    if (!imageSrc) {\n      alert(\"請上傳GIF!\");\n      return;\n    }\n    if (itemArray.length < 1) {\n      alert(\"請新增GIF區塊!\");\n      return;\n    }\n    isShowtime = true;\n  }\n</script>\n\n<main class=\"flex-center\">\n  {#if !isShowtime}\n    <div class=\"control-wrapper flex-center flex-col space-between\">\n      <div class=\"control-area card flex-center flex-col\">\n        <h3>選擇圖片</h3>\n        <input type=\"file\" accept=\"image/gif\" on:change={handleUpload} />\n        <div class=\"contror-preview flex-center\">\n          <p>預覽圖：</p>\n          <img src={imageSrc} alt=\"\" />\n        </div>\n      </div>\n      <div class=\"button-wrapper card flex-center flex-col\">\n        <div class=\"bpm-wrapper flex-center\">\n          <label for=\"input-bpm\">BPM：</label>\n          <input\n            id=\"input-bpm\"\n            type=\"number\"\n            value={setBpm}\n            min=\"60\"\n            max=\"240\"\n            on:input={(e) => (setBpm = e.target.value)}\n          />\n        </div>\n        <button class=\"button-82-pushable\" on:click={startTheShow}>\n          <span class=\"button-82-shadow\" />\n          <span class=\"button-82-edge\" />\n          <span class=\"button-82-front text\"> 開始你的表演 </span>\n        </button>\n        <span> tip: 表演狀態時，點擊畫面四角即可返回 </span>\n        <span> tip2: 建議使用 1秒1完整動作 的GIF </span>\n      </div>\n      <div class=\"author-wrapper card flex-center flex-col\">\n        <p>Author: starknows</p>\n        <p>Email: starknows99@gmail.com</p>\n      </div>\n    </div>\n    <div class=\"layout-setting card\">\n      <div class=\"add-item flex-center\">\n        <button on:click={addNewItem}>新增區塊</button>\n        <button on:click={() => (itemArray = [])}>清除區塊</button>\n      </div>\n      {#each itemArray as item, i}\n        <div\n          class=\"item-unit\"\n          style={`width:${item.width}px;height:${item.height}px;left:${item.left}%;top:${item.top}%;`}\n          data-index={i}\n          on:mousedown={dragItem}\n        >\n          <span\n            class=\"material-symbols-outlined icon-close\"\n            on:click={(e) => adjustItem(e, \"remove\", i)}\n          >\n            close\n          </span>\n          <div class=\"scale-icon-wrapper flex-center flex-col\">\n            <span\n              class=\"material-symbols-outlined\"\n              on:click={(e) => adjustItem(e, \"plus\", i)}\n            >\n              add\n            </span>\n            <span\n              class=\"material-symbols-outlined\"\n              on:click={(e) => adjustItem(e, \"minus\", i)}\n            >\n              remove\n            </span>\n          </div>\n        </div>\n      {/each}\n    </div>\n  {:else}\n    <div class=\"stage-wrapper\">\n      <div\n        class=\"back-to-setting left top\"\n        on:click={() => (isShowtime = false)}\n        on:keypress={() => (isShowtime = false)}\n      />\n      <div\n        class=\"back-to-setting left bottom\"\n        on:click={() => (isShowtime = false)}\n        on:keypress={() => (isShowtime = false)}\n      />\n      <div\n        class=\"back-to-setting right top\"\n        on:click={() => (isShowtime = false)}\n        on:keypress={() => (isShowtime = false)}\n      />\n      <div\n        class=\"back-to-setting right bottom\"\n        on:click={() => (isShowtime = false)}\n        on:keypress={() => (isShowtime = false)}\n      />\n      {#each itemArray as item, i}\n        <div\n          class=\"render-unit\"\n          style={`width:${item.width}px;height:${item.height}px;left:${item.left}%;top:${item.top}%;`}\n        >\n          <gif-player src={imageSrc} speed={setBpm / 60} play />\n        </div>\n      {/each}\n    </div>\n  {/if}\n</main>\n\n<style lang=\"sass\">\nmain\n\tbackground: 00000000\n\twidth: 100%\n\theight: 100%\n\tdisplay: flex\n.card\n\tmin-width: 200px\n\tmin-height: 200px\n\tpadding: 24px\n\tmargin: 24px\n\tborder-radius: 12px\n\tbox-shadow: rgba(0, 0, 0, 0.3) 1px 2px 6px\n.control-wrapper\n\tflex: 1 1 20% \n\tmargin: 16px\n.control-area\n\twidth: 100%\n\theight: 300px\n\t& > h3\n\t\tflex: 0 0 20%\n\t& > input\n\t\tflex: 0 0 20%\n.contror-preview\n\tflex: 0 0 60%\n\t& > img\n\t\twidth: 100px\n\t\theight: 100px\n\t\tobject-fit: contain\n.button-wrapper\n\twidth: 100%\n\theight: 50%\n\t& > span\n\t\tfont-size: 14px\n\t\tfont-weight: 700\n\t\tcolor: rgba(black, 0.6)\n.stage-wrapper\n\tposition: relative\n\twidth: 100%\n\theight: 100%\n.back-to-setting\n\tposition: absolute\n\twidth: 50px\n\theight: 50px\n\t&.left\n\t\tleft: 0\n\t&.right\n\t\tright: 0\n\t&.top\n\t\ttop: 0\n\t&.bottom\n\t\tbottom: 0\n.layout-setting\n\tflex: 1 1 70%\n\tposition: relative\n\twidth: 1600px\n\theight: 900px\n.add-item\n\tposition: absolute\n\tleft: 16px\n\ttop: -48px\n\t& > button\n\t\tmargin-right: 8px\n.item-unit\n\tcursor: grab\n\tposition: absolute\n\tborder-radius: 8px\n\tborder: 1px dashed #aaa\n\tbackground: rgba(pink, 0.1)\n\t&:active\n\t\tcursor: grabbing\n.render-unit\n\tposition: absolute\n\tpointer-events: none\ngif-player\n\twidth: 100%!important\n\theight: 100%!important\n.icon-close\n\tuser-select: none\n\tposition: absolute\n\tright: 4px\n\ttop: 4px\n\tcursor: pointer\n.scale-icon-wrapper\n\tposition: absolute\n\tleft: 4px\n\ttop: 4px\n\t& > span\n\t\tuser-select: none\n\t\tcursor: pointer\n.bpm-wrapper\n\twidth: 100px\n\t& > input\n\t\twidth: 70px\n.author-wrapper\n\twidth: 100%\n</style>\n","// (c) Dean McNamee <dean@gmail.com>, 2013.\n//\n// https://github.com/deanm/omggif\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n// IN THE SOFTWARE.\n//\n// omggif is a JavaScript implementation of a GIF 89a encoder and decoder,\n// including animation and compression.  It does not rely on any specific\n// underlying system, so should run in the browser, Node, or Plask.\n\nexport function GifReader(buf) {\n  var p = 0;\n\n  // - Header (GIF87a or GIF89a).\n  if (buf[p++] !== 0x47 ||            buf[p++] !== 0x49 || buf[p++] !== 0x46 ||\n      buf[p++] !== 0x38 || (buf[p++]+1 & 0xfd) !== 0x38 || buf[p++] !== 0x61) {\n    throw \"Invalid GIF 87a/89a header.\";\n  }\n\n  // - Logical Screen Descriptor.\n  var width = buf[p++] | buf[p++] << 8;\n  var height = buf[p++] | buf[p++] << 8;\n  var pf0 = buf[p++];  // <Packed Fields>.\n  var global_palette_flag = pf0 >> 7;\n  var num_global_colors_pow2 = pf0 & 0x7;\n  var num_global_colors = 1 << (num_global_colors_pow2 + 1);\n  var background = buf[p++];\n  buf[p++];  // Pixel aspect ratio (unused?).\n\n  var global_palette_offset = null;\n\n  if (global_palette_flag) {\n    global_palette_offset = p;\n    p += num_global_colors * 3;  // Seek past palette.\n  }\n\n  var no_eof = true;\n\n  var frames = [ ];\n\n  var delay = 0;\n  var transparent_index = null;\n  var disposal = 0;  // 0 - No disposal specified.\n  var loop_count = null;\n\n  this.width = width;\n  this.height = height;\n\n  while (no_eof && p < buf.length) {\n    switch (buf[p++]) {\n      case 0x21:  // Graphics Control Extension Block\n        switch (buf[p++]) {\n          case 0xff:  // Application specific block\n            // Try if it's a Netscape block (with animation loop counter).\n            if (buf[p   ] !== 0x0b ||  // 21 FF already read, check block size.\n                // NETSCAPE2.0\n                buf[p+1 ] == 0x4e && buf[p+2 ] == 0x45 && buf[p+3 ] == 0x54 &&\n                buf[p+4 ] == 0x53 && buf[p+5 ] == 0x43 && buf[p+6 ] == 0x41 &&\n                buf[p+7 ] == 0x50 && buf[p+8 ] == 0x45 && buf[p+9 ] == 0x32 &&\n                buf[p+10] == 0x2e && buf[p+11] == 0x30 &&\n                // Sub-block\n                buf[p+12] == 0x03 && buf[p+13] == 0x01 && buf[p+16] == 0) {\n              p += 14;\n              loop_count = buf[p++] | buf[p++] << 8;\n              p++;  // Skip terminator.\n            } else {  // We don't know what it is, just try to get past it.\n              p += 12;\n              while (true) {  // Seek through subblocks.\n                var block_size = buf[p++];\n                if (block_size === 0) break;\n                p += block_size;\n              }\n            }\n            break;\n\n          case 0xf9:  // Graphics Control Extension\n            if (buf[p++] !== 0x4 || buf[p+4] !== 0)\n              throw \"Invalid graphics extension block.\";\n            var pf1 = buf[p++];\n            delay = buf[p++] | buf[p++] << 8;\n            transparent_index = buf[p++];\n            if ((pf1 & 1) === 0) transparent_index = null;\n            disposal = pf1 >> 2 & 0x7;\n            p++;  // Skip terminator.\n            break;\n\n          case 0xfe:  // Comment Extension.\n            while (true) {  // Seek through subblocks.\n              var block_size = buf[p++];\n              if (block_size === 0) break;\n              // console.log(buf.slice(p, p+block_size).toString('ascii'));\n              p += block_size;\n            }\n            break;\n\n          default:\n            throw \"Unknown graphic control label: 0x\" + buf[p-1].toString(16);\n        }\n        break;\n\n      case 0x2c:  // Image Descriptor.\n        var x = buf[p++] | buf[p++] << 8;\n        var y = buf[p++] | buf[p++] << 8;\n        var w = buf[p++] | buf[p++] << 8;\n        var h = buf[p++] | buf[p++] << 8;\n        var pf2 = buf[p++];\n        var local_palette_flag = pf2 >> 7;\n        var interlace_flag = pf2 >> 6 & 1;\n        var num_local_colors_pow2 = pf2 & 0x7;\n        var num_local_colors = 1 << (num_local_colors_pow2 + 1);\n        var palette_offset = global_palette_offset;\n        var has_local_palette = false;\n        if (local_palette_flag) {\n          var has_local_palette = true;\n          palette_offset = p;  // Override with local palette.\n          p += num_local_colors * 3;  // Seek past palette.\n        }\n\n        var data_offset = p;\n\n        p++;  // codesize\n        while (true) {\n          var block_size = buf[p++];\n          if (block_size === 0) break;\n          p += block_size;\n        }\n\n        frames.push({x: x, y: y, width: w, height: h,\n                     has_local_palette: has_local_palette,\n                     palette_offset: palette_offset,\n                     data_offset: data_offset,\n                     data_length: p - data_offset,\n                     transparent_index: transparent_index,\n                     interlaced: !!interlace_flag,\n                     delay: delay,\n                     disposal: disposal});\n        break;\n\n      case 0x3b:  // Trailer Marker (end of file).\n        no_eof = false;\n        break;\n\n      default:\n        throw \"Unknown gif block: 0x\" + buf[p-1].toString(16);\n    }\n  }\n\n  this.numFrames = function() {\n    return frames.length;\n  };\n\n  this.loopCount = function() {\n    return loop_count;\n  };\n\n  this.frameInfo = function(frame_num) {\n    if (frame_num < 0 || frame_num >= frames.length)\n      throw \"Frame index out of range.\";\n    return frames[frame_num];\n  }\n\n  this.decodeAndBlitFrameRGBA = function(frame_num, pixels) {\n    var frame = this.frameInfo(frame_num);\n    var num_pixels = frame.width * frame.height;\n    var index_stream = new Uint8Array(num_pixels);  // At most 8-bit indices.\n    GifReaderLZWOutputIndexStream(\n        buf, frame.data_offset, index_stream, num_pixels);\n    var palette_offset = frame.palette_offset;\n\n    // NOTE(deanm): It seems to be much faster to compare index to 256 than\n    // to === null.  Not sure why, but CompareStub_EQ_STRICT shows up high in\n    // the profile, not sure if it's related to using a Uint8Array.\n    var trans = frame.transparent_index;\n    if (trans === null) trans = 256;\n\n    // We are possibly just blitting to a portion of the entire frame.\n    // That is a subrect within the framerect, so the additional pixels\n    // must be skipped over after we finished a scanline.\n    var framewidth  = frame.width;\n    var framestride = width - framewidth;\n    var xleft       = framewidth;  // Number of subrect pixels left in scanline.\n\n    // Output indicies of the top left and bottom right corners of the subrect.\n    var opbeg = ((frame.y * width) + frame.x) * 4;\n    var opend = ((frame.y + frame.height) * width + frame.x) * 4;\n    var op    = opbeg;\n\n    var scanstride = framestride * 4;\n\n    // Use scanstride to skip past the rows when interlacing.  This is skipping\n    // 7 rows for the first two passes, then 3 then 1.\n    if (frame.interlaced === true) {\n      scanstride += width * 4 * 7;  // Pass 1.\n    }\n\n    var interlaceskip = 8;  // Tracking the row interval in the current pass.\n\n    for (var i = 0, il = index_stream.length; i < il; ++i) {\n      var index = index_stream[i];\n\n      if (xleft === 0) {  // Beginning of new scan line\n        op += scanstride;\n        xleft = framewidth;\n        if (op >= opend) { // Catch the wrap to switch passes when interlacing.\n          scanstride = framestride * 4 + width * 4 * (interlaceskip-1);\n          // interlaceskip / 2 * 4 is interlaceskip << 1.\n          op = opbeg + (framewidth + framestride) * (interlaceskip << 1);\n          interlaceskip >>= 1;\n        }\n      }\n\n      if (index === trans) {\n        op += 4;\n      } else {\n        var r = buf[palette_offset + index * 3];\n        var g = buf[palette_offset + index * 3 + 1];\n        var b = buf[palette_offset + index * 3 + 2];\n        pixels[op++] = r;\n        pixels[op++] = g;\n        pixels[op++] = b;\n        pixels[op++] = 255;\n      }\n      --xleft;\n    }\n  };\n}\n\nfunction GifReaderLZWOutputIndexStream(code_stream, p, output, output_length) {\n  var min_code_size = code_stream[p++];\n\n  var clear_code = 1 << min_code_size;\n  var eoi_code = clear_code + 1;\n  var next_code = eoi_code + 1;\n\n  var cur_code_size = min_code_size + 1;  // Number of bits per code.\n  // NOTE: This shares the same name as the encoder, but has a different\n  // meaning here.  Here this masks each code coming from the code stream.\n  var code_mask = (1 << cur_code_size) - 1;\n  var cur_shift = 0;\n  var cur = 0;\n\n  var op = 0;  // Output pointer.\n\n  var subblock_size = code_stream[p++];\n\n  // TODO(deanm): Would using a TypedArray be any faster?  At least it would\n  // solve the fast mode / backing store uncertainty.\n  // var code_table = Array(4096);\n  var code_table = new Int32Array(4096);  // Can be signed, we only use 20 bits.\n\n  var prev_code = null;  // Track code-1.\n\n  while (true) {\n    // Read up to two bytes, making sure we always 12-bits for max sized code.\n    while (cur_shift < 16) {\n      if (subblock_size === 0) break;  // No more data to be read.\n\n      cur |= code_stream[p++] << cur_shift;\n      cur_shift += 8;\n\n      if (subblock_size === 1) {  // Never let it get to 0 to hold logic above.\n        subblock_size = code_stream[p++];  // Next subblock.\n      } else {\n        --subblock_size;\n      }\n    }\n\n    // TODO(deanm): We should never really get here, we should have received\n    // and EOI.\n    if (cur_shift < cur_code_size)\n      break;\n\n    var code = cur & code_mask;\n    cur >>= cur_code_size;\n    cur_shift -= cur_code_size;\n\n    // TODO(deanm): Maybe should check that the first code was a clear code,\n    // at least this is what you're supposed to do.  But actually our encoder\n    // now doesn't emit a clear code first anyway.\n    if (code === clear_code) {\n      // We don't actually have to clear the table.  This could be a good idea\n      // for greater error checking, but we don't really do any anyway.  We\n      // will just track it with next_code and overwrite old entries.\n\n      next_code = eoi_code + 1;\n      cur_code_size = min_code_size + 1;\n      code_mask = (1 << cur_code_size) - 1;\n\n      // Don't update prev_code ?\n      prev_code = null;\n      continue;\n    } else if (code === eoi_code) {\n      break;\n    }\n\n    // We have a similar situation as the decoder, where we want to store\n    // variable length entries (code table entries), but we want to do in a\n    // faster manner than an array of arrays.  The code below stores sort of a\n    // linked list within the code table, and then \"chases\" through it to\n    // construct the dictionary entries.  When a new entry is created, just the\n    // last byte is stored, and the rest (prefix) of the entry is only\n    // referenced by its table entry.  Then the code chases through the\n    // prefixes until it reaches a single byte code.  We have to chase twice,\n    // first to compute the length, and then to actually copy the data to the\n    // output (backwards, since we know the length).  The alternative would be\n    // storing something in an intermediate stack, but that doesn't make any\n    // more sense.  I implemented an approach where it also stored the length\n    // in the code table, although it's a bit tricky because you run out of\n    // bits (12 + 12 + 8), but I didn't measure much improvements (the table\n    // entries are generally not the long).  Even when I created benchmarks for\n    // very long table entries the complexity did not seem worth it.\n    // The code table stores the prefix entry in 12 bits and then the suffix\n    // byte in 8 bits, so each entry is 20 bits.\n\n    var chase_code = code < next_code ? code : prev_code;\n\n    // Chase what we will output, either {CODE} or {CODE-1}.\n    var chase_length = 0;\n    var chase = chase_code;\n    while (chase > clear_code) {\n      chase = code_table[chase] >> 8;\n      ++chase_length;\n    }\n\n    var k = chase;\n\n    var op_end = op + chase_length + (chase_code !== code ? 1 : 0);\n    if (op_end > output_length) {\n      console.log(\"Warning, gif stream longer than expected.\");\n      return;\n    }\n\n    // Already have the first byte from the chase, might as well write it fast.\n    output[op++] = k;\n\n    op += chase_length;\n    var b = op;  // Track pointer, writing backwards.\n\n    if (chase_code !== code)  // The case of emitting {CODE-1} + k.\n      output[op++] = k;\n\n    chase = chase_code;\n    while (chase_length--) {\n      chase = code_table[chase];\n      output[--b] = chase & 0xff;  // Write backwards.\n      chase >>= 8;  // Pull down to the prefix code.\n    }\n\n    if (prev_code !== null && next_code < 4096) {\n      code_table[next_code++] = prev_code << 8 | k;\n      // TODO(deanm): Figure out this clearing vs code growth logic better.  I\n      // have an feeling that it should just happen somewhere else, for now it\n      // is awkward between when we grow past the max and then hit a clear code.\n      // For now just check if we hit the max 12-bits (then a clear code should\n      // follow, also of course encoded in 12-bits).\n      if (next_code >= code_mask+1 && cur_code_size < 12) {\n        ++cur_code_size;\n        code_mask = code_mask << 1 | 1;\n      }\n    }\n\n    prev_code = code;\n  }\n\n  if (op !== output_length) {\n    console.log(\"Warning, gif stream shorter than expected.\");\n  }\n\n  return output;\n}\n","import { GifReader } from \"./omggif\";\n\nexport default function () {\n  const template = document.createElement(\"template\");\n  template.innerHTML = `\n<style>\n  canvas {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n  }\n\n  @keyframes spinner {\n    to {transform: rotate(360deg);}\n  }\n\n  .spinner:before {\n    content: '';\n    box-sizing: border-box;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 20px;\n    height: 20px;\n    margin-top: -10px;\n    margin-left: -10px;\n    border-radius: 50%;\n    border-top: 2px solid #999;\n    border-right: 2px solid transparent;\n    animation: spinner .6s linear infinite;\n  }\n</style>\n<canvas></canvas>\n<div class=\"spinner\"></spinner>\n`;\n\n  class GifPlayer extends HTMLElement {\n    static get observedAttributes() {\n      return [\n        \"src\",\n        \"frame\",\n        \"size\",\n        \"speed\",\n        \"play\",\n        \"swipe\",\n        \"repeat\",\n        \"bounce\",\n        \"direction\",\n      ];\n    }\n\n    constructor() {\n      super();\n\n      this._speed = 0.5;\n      this._size = \"auto\";\n      this._swipe = true;\n      this._repeat = true;\n      this._bounce = false;\n      this._prerender = false;\n      this._direction = 1;\n\n      this._reset();\n\n      this.pausePlaybackBound = this.pausePlayback.bind(this);\n      this.moveBound = this.move.bind(this);\n      this.resumePlaybackBound = this.resumePlayback.bind(this);\n      this.prerenderFramesBound = this.prerenderFrames.bind(this);\n      this.playLoopBound = this.playLoop.bind(this);\n\n      const shadowRoot = this.attachShadow({ mode: \"open\" });\n      shadowRoot.appendChild(document.importNode(template.content, true));\n\n      this._spinner = shadowRoot.querySelector(\".spinner\");\n      this._canvas = shadowRoot.querySelector(\"canvas\");\n      this._ctx = this._canvas.getContext(\"2d\");\n    }\n\n    connectedCallback() {\n      this.style.display = \"inline-block\";\n      this.style.position = \"relative\";\n      this.style.overflow = \"hidden\";\n      this.style.cursor = \"col-resize\";\n\n      this.addEventListener(\"touchstart\", this.pausePlaybackBound, false);\n      this.addEventListener(\"touchmove\", this.moveBound, false);\n      this.addEventListener(\"touchend\", this.resumePlaybackBound, false);\n\n      this.addEventListener(\"mouseenter\", this.pausePlaybackBound, false);\n      this.addEventListener(\"mousemove\", this.moveBound, false);\n      this.addEventListener(\"mouseleave\", this.resumePlaybackBound, false);\n    }\n\n    disconnectedCallback() {\n      this.removeEventListener(\"touchstart\", this.pausePlaybackBound, false);\n      this.removeEventListener(\"touchmove\", this.moveBound, false);\n      this.removeEventListener(\"touchend\", this.resumePlaybackBound, false);\n\n      this.removeEventListener(\"mouseenter\", this.pausePlaybackBound, false);\n      this.removeEventListener(\"mousemove\", this.moveBound, false);\n      this.removeEventListener(\"mouseleave\", this.resumePlaybackBound, false);\n    }\n\n    attributeChangedCallback(name, oldValue, newValue) {\n      if (oldValue === newValue) return;\n      this[name] = newValue;\n    }\n\n    _reset() {\n      this._frames = [];\n      this._delays = [];\n      this._frame = 0;\n      this._decoded = -1;\n      this._rendered = -1; // frame last rendered\n    }\n\n    _handleBoolean(name, val) {\n      this[\"_\" + name] = val = val !== null && val !== undefined ? true : false;\n      if (val) {\n        this.setAttribute(name, \"\");\n      } else {\n        this.removeAttribute(name);\n      }\n    }\n\n    get src() {\n      return this._src;\n    }\n    set src(val) {\n      this._src = val;\n      this.load(val);\n    }\n\n    get frame() {\n      return this._frame;\n    }\n    set frame(val) {\n      this._frame = parseInt(val);\n      this.displayFrame(this._frames, this._frame);\n    }\n\n    get size() {\n      return this._size;\n    }\n    set size(val) {\n      this._size = val;\n    }\n\n    get speed() {\n      return this._speed;\n    }\n    set speed(val) {\n      this._speed = parseFloat(val);\n    }\n\n    get swipe() {\n      return this._swipe;\n    }\n    set swipe(val) {\n      this._swipe = val;\n    }\n\n    get play() {\n      return this._play;\n    }\n    set play(val) {\n      this._handleBoolean(\"play\", val);\n    }\n\n    get repeat() {\n      return this._repeat;\n    }\n    set repeat(val) {\n      this._repeat = parseFloat(val);\n    }\n\n    get bounce() {\n      return this._bounce;\n    }\n    set bounce(val) {\n      this._handleBoolean(\"bounce\", val);\n    }\n\n    get direction() {\n      return this._direction;\n    }\n    set direction(val) {\n      this._direction = parseInt(val);\n    }\n\n    get prerender() {\n      return this._prerender;\n    }\n    set prerender(val) {\n      this._prerender = val;\n    }\n\n    get onload() {\n      return this._onload;\n    }\n    set onload(val) {\n      this._onload = val;\n    }\n\n    move(e) {\n      e.preventDefault();\n\n      var clientX;\n      if (e.targetTouches) {\n        clientX = e.targetTouches[0].clientX;\n      } else {\n        clientX = e.clientX;\n      }\n\n      // calculate our relative horizontal position over the element\n      // TODO: cache this, clear on scroll / resize etc...\n      var rect = this.getBoundingClientRect();\n      var x = clientX - rect.left;\n      var position = x / rect.width;\n\n      // ... and which frame should appear there\n      this.frame = Math.round((this._frames.length - 1) * position);\n    }\n\n    load(src) {\n      this._reset();\n\n      this.dispatchEvent(\n        new CustomEvent(\"gif-loading\", {\n          bubbles: true,\n          composed: true,\n          detail: src,\n        })\n      );\n      this._spinner.style.display = \"block\";\n\n      var options = {\n        method: \"GET\",\n        mode: \"cors\",\n        cache: \"default\",\n      };\n\n      fetch(src, options)\n        .then((resp) => resp.arrayBuffer())\n        .then((buf) => new Uint8Array(buf))\n        .then((buf) => new GifReader(buf))\n        .then((gif) => this.process(gif))\n        .then(() => (this._spinner.style.display = \"none\"));\n    }\n\n    process(gif) {\n      this._gif = gif;\n\n      // canvas drawing area always matches the gif size\n      this._canvas.width = gif.width;\n      this._canvas.height = gif.height;\n\n      // but we can change the visual size and position ...\n      var gifRatio = gif.width / gif.height;\n      var eleRatio = this.clientWidth / this.clientHeight;\n\n      this._canvas.style.top = 0;\n      this._canvas.style.left = 0;\n\n      switch (this._size) {\n        case \"auto\":\n          this.style.width = gif.width + \"px\";\n          this.style.height = gif.height + \"px\";\n          break;\n        case \"cover\":\n          var width, height;\n          if (gifRatio > eleRatio) {\n            // fit to height, overlap sides\n            width = this.clientHeight * gifRatio;\n            height = this.clientHeight;\n            this._canvas.style.top = 0;\n            this._canvas.style.left = -((width - this.clientWidth) / 2) + \"px\";\n          } else {\n            // fit to width, overlap top\n            width = this.clientWidth;\n            height = this.clientWidth / gifRatio;\n            this._canvas.style.top = -((height - this.clientHeight) / 2) + \"px\";\n            this._canvas.style.left = 0;\n          }\n          this._canvas.style.width = width + \"px\";\n          this._canvas.style.height = height + \"px\";\n          break;\n        case \"contain\":\n          var width, height;\n          if (gifRatio > eleRatio) {\n            width = this.clientWidth;\n            height = this.clientWidth / gifRatio;\n            this._canvas.style.top = (this.clientHeight - height) / 2 + \"px\";\n            this._canvas.style.left = 0;\n          } else {\n            width = this.clientHeight * gifRatio;\n            height = this.clientHeight;\n            this._canvas.style.top = 0;\n            this._canvas.style.left = (this.clientWidth - width) / 2 + \"px\";\n          }\n          this._canvas.style.width = width + \"px\";\n          this._canvas.style.height = height + \"px\";\n          break;\n        case \"stretch\":\n          this._canvas.style.width = \"100%\";\n          this._canvas.style.height = \"100%\";\n          break;\n      }\n\n      var count = gif.numFrames();\n\n      this._decoded = -1;\n      this._delays = new Array(count);\n      this._frames = new Array(count);\n\n      if (this._frame < 0) {\n        this._frame = this._frames.length + this._frame;\n      }\n\n      var e = new CustomEvent(\"gif-loaded\", {\n        bubbles: true,\n        composed: true,\n        detail: gif,\n      });\n      this.dispatchEvent(e);\n      if (this._onload) {\n        this._onload(e);\n      }\n\n      if (this._play) {\n        this.start();\n      } else {\n        this.displayFrame(this._frames, this._frame);\n      }\n\n      if (this._prerender) {\n        requestIdleCallback(this.prerenderFramesBound);\n      }\n    }\n\n    start() {\n      this.playing = true;\n      this.playAnimation(this._frames, this._frame);\n    }\n\n    stop() {\n      this.playing = false;\n    }\n\n    pausePlayback(e) {\n      this.paused = true;\n    }\n\n    resumePlayback(e) {\n      this.paused = false;\n      if (this.playing) {\n        this.playAnimation(this._frames, this._frame);\n      }\n    }\n\n    playLoop(timestamp) {\n      this.rafHandle = requestAnimationFrame(this.playLoopBound);\n\n      if (this._rendered != this._frame) {\n        if (this._frames[this._frame]) {\n          this._rendered = this._frame;\n          this._ctx.putImageData(this._frames[this._frame], 0, 0);\n        }\n      }\n    }\n\n    playAnimation(frames, frame) {\n      if (frames.length === 0) return;\n\n      this.renderFrame(frame);\n      setTimeout(() => {\n        if (this.paused) {\n          return;\n        }\n        var frame = this.frame + this._direction;\n        if (frame < 0) {\n          if (this._bounce) {\n            this._direction = 1;\n            frame = 1;\n          } else {\n            frame = this._frames.length - 1;\n          }\n        } else if (frame >= this._frames.length) {\n          if (this._bounce) {\n            this._direction = -1;\n            frame = this._frames.length - 2;\n          } else {\n            frame = 0;\n          }\n        }\n        this.frame = frame;\n        this.playAnimation(this._frames, this._frame);\n      }, this._delays[frame] * (1 / this._speed));\n    }\n\n    next() {\n      this.frame++;\n      if (this.frame >= this._frames.length) {\n        this.frame = 0;\n      }\n      this.render(this.frame);\n    }\n\n    displayFrame(frames, frame) {\n      if (frames.length === 0) return;\n      if (frame >= frames.length) frame = frames.length - 1;\n      if (frame < 0) frame += frames.length;\n\n      this.renderFrame(frame);\n\n      if (this._rendered != frame) {\n        requestAnimationFrame(() => {\n          this._ctx.putImageData(this._frames[frame], 0, 0);\n          this._rendered = frame;\n          this.dispatchEvent(\n            new CustomEvent(\"gif-frame\", {\n              bubbles: true,\n              composed: true,\n              detail: frame,\n            })\n          );\n        });\n      }\n    }\n\n    renderFrame(frame) {\n      while (this._decoded < frame) {\n        var curr = this._decoded + 1;\n        var frameInfo = this._gif.frameInfo(curr);\n        var imageData = this._ctx.createImageData(\n          this._gif.width,\n          this._gif.height\n        );\n        if (curr > 0 && frameInfo.disposal < 2) {\n          imageData.data.set(\n            new Uint8ClampedArray(this._frames[curr - 1].data)\n          );\n        }\n        this._gif.decodeAndBlitFrameRGBA(curr, imageData.data);\n        this._frames[curr] = imageData;\n        this._delays[curr] = frameInfo.delay * 10;\n        this._decoded = curr;\n      }\n    }\n\n    // pre-emptively render remaining frames during any idle time\n    // https://developers.google.com/web/updates/2015/08/using-requestidlecallback\n    prerenderFrames(deadline) {\n      while (\n        deadline.timeRemaining() > 0 &&\n        this._decoded < this._frames.length - 1\n      ) {\n        this.renderFrame(this._decoded + 1);\n      }\n\n      // if we ran out of time and still have work todo, schedule another idle callback\n      if (this._decoded < this._frames.length - 1) {\n        requestIdleCallback(this.prerenderBound);\n      }\n    }\n  }\n  console.log(\"trigger player\");\n  window.customElements.define(\"gif-player\", GifPlayer);\n}\n","import App from \"./App.svelte\";\nimport init from \"./gif-player\";\ninit();\nconst app = new App({\n    target: document.body,\n    props: {},\n});\n\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","current_component","src_url_equal","element_src","url","document","createElement","href","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","space","data","createTextNode","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_custom_element_data","prop","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","seen_callbacks","Set","flushidx","flush","saved_component","update","$$","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_mount","on_destroy","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","c","intro","block","delete","local","customElement","m","new_on_destroy","map","filter","mount_component","SvelteComponent","$destroy","destroy_component","this","$on","type","index","indexOf","splice","$set","$$props","obj","$$set","keys","div4","div0","div1","div2","div3","img","img_src_value","div5","h3","input0","p0","label","input1","button0","span3","span4","div7","div6","button1","button2","gif_player","gif_player_src_value","gif_player_speed_value","div","div_style_value","width","height","left","top","div1_style_value","span0","span1","span2","create_if_block","main","imageSrc","isShowtime","itemArray","setBpm","adjustItem","e","console","log","stopPropagation","$$invalidate","file","files","URL","createObjectURL","layer","dataset","parentSize","parentElement","clientWidth","clientHeight","itemDataCached","JSON","parse","stringify","InitLeft","InitTop","InitClienX","clientX","InitClienY","clientY","WidthRatio","Math","floor","HeightRatio","onmousemove","moveEvent","fixX","fixY","clearMoveEvent","alert","GifReader","buf","pf0","global_palette_flag","num_global_colors","global_palette_offset","no_eof","frames","delay","transparent_index","disposal","loop_count","block_size","pf1","toString","x","y","w","h","pf2","interlace_flag","palette_offset","has_local_palette","data_offset","data_length","interlaced","numFrames","loopCount","frameInfo","frame_num","decodeAndBlitFrameRGBA","pixels","frame","num_pixels","index_stream","Uint8Array","code_stream","output","output_length","min_code_size","clear_code","eoi_code","next_code","cur_code_size","code_mask","cur_shift","cur","op","subblock_size","code_table","Int32Array","prev_code","code","chase_code","chase_length","chase","k","GifReaderLZWOutputIndexStream","trans","framewidth","framestride","xleft","opbeg","opend","scanstride","interlaceskip","il","r","g","template","innerHTML","GifPlayer","HTMLElement","observedAttributes","constructor","super","_speed","_size","_swipe","_repeat","_bounce","_prerender","_direction","_reset","pausePlaybackBound","pausePlayback","bind","moveBound","move","resumePlaybackBound","resumePlayback","prerenderFramesBound","prerenderFrames","playLoopBound","playLoop","shadowRoot","attachShadow","mode","importNode","content","_spinner","querySelector","_canvas","_ctx","getContext","connectedCallback","style","display","position","overflow","cursor","disconnectedCallback","attributeChangedCallback","oldValue","newValue","_frames","_delays","_frame","_decoded","_rendered","_handleBoolean","val","src","_src","load","parseInt","displayFrame","size","speed","parseFloat","swipe","play","_play","repeat","bounce","direction","prerender","onload","_onload","preventDefault","targetTouches","rect","getBoundingClientRect","round","dispatchEvent","CustomEvent","bubbles","composed","detail","fetch","method","cache","resp","arrayBuffer","gif","process","_gif","gifRatio","eleRatio","count","start","requestIdleCallback","playing","playAnimation","stop","paused","timestamp","rafHandle","requestAnimationFrame","putImageData","renderFrame","setTimeout","next","render","curr","imageData","createImageData","set","Uint8ClampedArray","deadline","timeRemaining","prerenderBound","window","customElements","define","body"],"mappings":"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"}